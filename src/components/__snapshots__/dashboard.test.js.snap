// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dashboard /> the page correctly renders all links and routes`] = `
<section
  className="Dashboard"
>
  <nav
    className="App-header"
  >
    <Link
      className="Fridge-logo"
      replace={false}
      to="/fridge"
    >
      <img
        alt="logo"
        src="fridge.png"
      />
    </Link>
    <Link
      className="Pantry-logo"
      replace={false}
      to="/pantry"
    >
      <img
        alt="logo"
        src="pantry.png"
      />
    </Link>
    <Link
      className="Recipe-logo"
      replace={false}
      to="/recipe"
    >
      <img
        alt="oven"
        src="oven.png"
      />
    </Link>
    <Link
      className="Garbagecan-logo"
      replace={false}
      to="/dashboard"
    >
      <img
        alt="garbage"
        src="garbagecan.png"
      />
    </Link>
    <Link
      className="Add-logo"
      replace={false}
      to="/add"
    >
      <img
        alt="add"
        src="plus.png"
      />
    </Link>
  </nav>
  <main>
    <Route
      component="FridgeInventory"
      path="/fridge"
    />
    <Route
      component={[Function]}
      path="/pantry"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "WrappedComponent": [Function],
          "defaultProps": Object {
            "destroyOnUnmount": true,
            "enableReinitialize": false,
            "forceUnregisterOnUnmount": false,
            "form": "add",
            "getFormState": [Function],
            "keepDirtyOnReinitialize": false,
            "onSubmitFail": [Function],
            "persistentSubmitErrors": false,
            "pure": true,
            "shouldAsyncValidate": [Function],
            "shouldError": [Function],
            "shouldValidate": [Function],
            "shouldWarn": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "updateUnregisteredFields": false,
          },
          "displayName": "ReduxForm",
          "render": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      path="/add"
    />
    <Route
      component={[Function]}
      path="/recipe"
    />
    <Route
      component="FridgeInventory"
      exact={true}
      path="/"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/dashboard"
    />
  </main>
</section>
`;

exports[`<Dashboard /> the page correctly renders all links and routes 1`] = `
<section
  className="Dashboard"
>
  <nav
    className="App-header"
  >
    <Link
      className="Fridge-logo"
      replace={false}
      to="/fridge"
    >
      <img
        alt="logo"
        src="fridge.png"
      />
    </Link>
    <Link
      className="Pantry-logo"
      replace={false}
      to="/pantry"
    >
      <img
        alt="logo"
        src="pantry.png"
      />
    </Link>
    <Link
      className="Recipe-logo"
      replace={false}
      to="/recipe"
    >
      <img
        alt="oven"
        src="oven.png"
      />
    </Link>
    <Link
      className="Garbagecan-logo"
      replace={false}
      to="/dashboard"
    >
      <img
        alt="garbage"
        src="garbagecan.png"
      />
    </Link>
    <Link
      className="Add-logo"
      replace={false}
      to="/add"
    >
      <img
        alt="add"
        src="plus.png"
      />
    </Link>
  </nav>
  <main>
    <Route
      component={[Function]}
      path="/fridge"
    />
    <Route
      component={[Function]}
      path="/pantry"
    />
    <Route
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "WrappedComponent": [Function],
          "defaultProps": Object {
            "destroyOnUnmount": true,
            "enableReinitialize": false,
            "forceUnregisterOnUnmount": false,
            "form": "add",
            "getFormState": [Function],
            "keepDirtyOnReinitialize": false,
            "onSubmitFail": [Function],
            "persistentSubmitErrors": false,
            "pure": true,
            "shouldAsyncValidate": [Function],
            "shouldError": [Function],
            "shouldValidate": [Function],
            "shouldWarn": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "updateUnregisteredFields": false,
          },
          "displayName": "ReduxForm",
          "render": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      path="/add"
    />
    <Route
      component={[Function]}
      path="/recipe"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/"
    />
    <Route
      component={[Function]}
      exact={true}
      path="/dashboard"
    />
  </main>
</section>
`;
